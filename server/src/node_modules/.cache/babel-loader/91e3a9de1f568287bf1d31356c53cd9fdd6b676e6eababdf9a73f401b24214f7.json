{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from '../../axios';\nexport const fetchAuth = createAsyncThunk('auth/fetchUserData', async params => {\n  const {\n    data\n  } = await axios.post('/auth/login', params);\n  return data;\n});\nconst initialState = {\n  data: null,\n  status: 'loading'\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: {\n    [fetchAuth.pending]: state => {\n      state.status = 'loading';\n      state.data = null;\n    },\n    [fetchAuth.fulfilled]: (state, action) => {\n      state.status = 'loaded';\n      state.data = action.payload;\n    },\n    [fetchAuth.rejected]: state => {\n      state.status = 'error';\n      state.data = null;\n    }\n  }\n});\nexport const selectIsAuth = state => Boolean(state.auth.data);\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchAuth","params","data","post","initialState","status","authSlice","name","reducers","logout","state","extraReducers","pending","fulfilled","action","payload","rejected","selectIsAuth","Boolean","auth","authReducer","reducer"],"sources":["D:/GottaBeReplaced/Diploma/DiabetesCare/server/src/src/redux/slices/auth.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from '../../axios'\r\nexport const fetchAuth =\r\n    createAsyncThunk('auth/fetchUserData', async(params) =>{\r\n    const {data} = await axios.post('/auth/login', params);\r\n    return data;\r\n});\r\nconst initialState = {\r\n    data: null,\r\n    status: 'loading',\r\n};\r\n\r\nconst authSlice = createSlice({\r\n   name: 'auth',\r\n   initialState,\r\n    reducers:{\r\n       logout: (state) =>{\r\n           state.data = null;\r\n       }\r\n    },\r\n    extraReducers:{\r\n        [fetchAuth.pending]: (state) =>{\r\n            state.status = 'loading';\r\n            state.data = null;\r\n        },\r\n        [fetchAuth.fulfilled] :(state, action)=>{\r\n            state.status = 'loaded';\r\n            state.data = action.payload;\r\n        },\r\n        [fetchAuth.rejected] :(state)=>{\r\n            state.status = 'error';\r\n            state.data = null;\r\n        },\r\n    }\r\n});\r\n\r\nexport const selectIsAuth = (state) => Boolean(state.auth.data);\r\n\r\nexport const authReducer = authSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,MAAMC,SAAS,GAClBF,gBAAgB,CAAC,oBAAoB,EAAE,MAAMG,MAAM,IAAI;EACvD,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,aAAa,EAAEF,MAAM,CAAC;EACtD,OAAOC,IAAI;AACf,CAAC,CAAC;AACF,MAAME,YAAY,GAAG;EACjBF,IAAI,EAAE,IAAI;EACVG,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC3BU,IAAI,EAAE,MAAM;EACZH,YAAY;EACXI,QAAQ,EAAC;IACNC,MAAM,EAAGC,KAAK,IAAI;MACdA,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB;EACH,CAAC;EACDS,aAAa,EAAC;IACV,CAACX,SAAS,CAACY,OAAO,GAAIF,KAAK,IAAI;MAC3BA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxBK,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB,CAAC;IACD,CAACF,SAAS,CAACa,SAAS,GAAG,CAACH,KAAK,EAAEI,MAAM,KAAG;MACpCJ,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACR,IAAI,GAAGY,MAAM,CAACC,OAAO;IAC/B,CAAC;IACD,CAACf,SAAS,CAACgB,QAAQ,GAAIN,KAAK,IAAG;MAC3BA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMe,YAAY,GAAIP,KAAK,IAAKQ,OAAO,CAACR,KAAK,CAACS,IAAI,CAACjB,IAAI,CAAC;AAE/D,OAAO,MAAMkB,WAAW,GAAGd,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}