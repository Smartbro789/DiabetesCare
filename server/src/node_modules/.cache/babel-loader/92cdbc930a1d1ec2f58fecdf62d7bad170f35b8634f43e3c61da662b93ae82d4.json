{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from '../../axios';\nexport const fetchMedicalNotes = createAsyncThunk('medicalnote/fetchMedicalNotes', async () => {\n  const {\n    data\n  } = await axios.get('/medicalnote');\n  return data;\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst medicalNotesSlice = createSlice({\n  name: 'medicalnote',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchMedicalNotes.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = 'loading';\n    },\n    [fetchMedicalNotes.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = 'loaded';\n    },\n    [fetchMedicalNotes.rejected]: state => {\n      state.posts.items = [];\n      state.posts.status = 'error';\n    }\n  }\n});\nexport const medicalNoteReducer = medicalNotesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchMedicalNotes","data","get","initialState","posts","items","status","tags","medicalNotesSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","medicalNoteReducer","reducer"],"sources":["D:/GottaBeReplaced/Diploma/DiabetesCare/server/src/src/redux/slices/medicalNotes.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\nimport axios from '../../axios';\r\n\r\nexport const fetchMedicalNotes = createAsyncThunk('medicalnote/fetchMedicalNotes', async()=>{\r\n    const {data} = await axios.get('/medicalnote');\r\n    return data;\r\n});\r\n\r\nconst initialState = {\r\n    posts: {\r\n        items: [],\r\n        status: 'loading',\r\n    },\r\n    tags: {\r\n        items: [],\r\n        status: 'loading',\r\n    },\r\n}\r\n\r\nconst medicalNotesSlice = createSlice({\r\n    name: 'medicalnote',\r\n    initialState,\r\n    reducers:{},\r\n    extraReducers: {\r\n        [fetchMedicalNotes.pending]: (state) =>{\r\n            state.posts.items = [];\r\n            state.posts.status = 'loading';\r\n        },\r\n        [fetchMedicalNotes.fulfilled] :(state, action)=>{\r\n            state.posts.items = action.payload;\r\n            state.posts.status = 'loaded';\r\n        },\r\n        [fetchMedicalNotes.rejected] :(state)=>{\r\n            state.posts.items = [];\r\n            state.posts.status = 'error';\r\n        },\r\n    },\r\n});\r\n\r\nexport const medicalNoteReducer = medicalNotesSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAAC,+BAA+B,EAAE,YAAS;EACxF,MAAM;IAACG;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,cAAc,CAAC;EAC9C,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE;IACHC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACFF,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACZ;AACJ,CAAC;AAED,MAAME,iBAAiB,GAAGX,WAAW,CAAC;EAClCY,IAAI,EAAE,aAAa;EACnBN,YAAY;EACZO,QAAQ,EAAC,CAAC,CAAC;EACXC,aAAa,EAAE;IACX,CAACX,iBAAiB,CAACY,OAAO,GAAIC,KAAK,IAAI;MACnCA,KAAK,CAACT,KAAK,CAACC,KAAK,GAAG,EAAE;MACtBQ,KAAK,CAACT,KAAK,CAACE,MAAM,GAAG,SAAS;IAClC,CAAC;IACD,CAACN,iBAAiB,CAACc,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAG;MAC5CF,KAAK,CAACT,KAAK,CAACC,KAAK,GAAGU,MAAM,CAACC,OAAO;MAClCH,KAAK,CAACT,KAAK,CAACE,MAAM,GAAG,QAAQ;IACjC,CAAC;IACD,CAACN,iBAAiB,CAACiB,QAAQ,GAAIJ,KAAK,IAAG;MACnCA,KAAK,CAACT,KAAK,CAACC,KAAK,GAAG,EAAE;MACtBQ,KAAK,CAACT,KAAK,CAACE,MAAM,GAAG,OAAO;IAChC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMY,kBAAkB,GAAGV,iBAAiB,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}