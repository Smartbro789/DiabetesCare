{"ast":null,"code":"import _objectSpread from \"D:/GottaBeReplaced/Diploma/DiabetesCare/server/src/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/GottaBeReplaced/Diploma/DiabetesCare/server/src/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"D:/GottaBeReplaced/Diploma/DiabetesCare/server/src/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"events\", \"value\", \"options\", \"children\", \"extraKeys\", \"getLineAndCursor\", \"getMdeInstance\", \"getCodemirrorInstance\", \"onChange\", \"id\", \"placeholder\", \"textareaProps\"];\n// src/SimpleMdeReact.tsx\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport SimpleMDE from \"easymde\";\nvar _id = 0;\nvar generateId = function generateId() {\n  return \"simplemde-editor-\".concat(++_id);\n};\nvar useHandleEditorInstanceLifecycle = function useHandleEditorInstanceLifecycle(_ref) {\n  var options = _ref.options,\n    id = _ref.id,\n    currentValueRef = _ref.currentValueRef,\n    textRef = _ref.textRef;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    editor = _useState2[0],\n    setEditor = _useState2[1];\n  var imageUploadCallback = useCallback(function (file, onSuccess, onError) {\n    var imageUpload = options == null ? void 0 : options.imageUploadFunction;\n    if (imageUpload) {\n      var _onSuccess = function _onSuccess(url) {\n        onSuccess(url);\n      };\n      imageUpload(file, _onSuccess, onError);\n    }\n  }, [options == null ? void 0 : options.imageUploadFunction]);\n  var editorRef = useRef(editor);\n  editorRef.current = editor;\n  useEffect(function () {\n    var editor2;\n    if (textRef) {\n      var initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current\n      };\n      var imageUploadFunction = (options == null ? void 0 : options.imageUploadFunction) ? imageUploadCallback : void 0;\n      editor2 = new SimpleMDE(Object.assign({}, initialOptions, options, {\n        imageUploadFunction: imageUploadFunction\n      }));\n      setEditor(editor2);\n    }\n    return function () {\n      editor2 == null ? void 0 : editor2.toTextArea();\n      editor2 == null ? void 0 : editor2.cleanup();\n    };\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n  var codemirror = useMemo(function () {\n    return editor == null ? void 0 : editor.codemirror;\n  }, [editor == null ? void 0 : editor.codemirror]);\n  return {\n    editor: editor,\n    codemirror: codemirror\n  };\n};\nvar SimpleMdeReact = React.forwardRef(function (props, _ref9) {\n  var events = props.events,\n    value = props.value,\n    options = props.options,\n    children = props.children,\n    extraKeys = props.extraKeys,\n    getLineAndCursor = props.getLineAndCursor,\n    getMdeInstance = props.getMdeInstance,\n    getCodemirrorInstance = props.getCodemirrorInstance,\n    onChange = props.onChange,\n    anId = props.id,\n    placeholder = props.placeholder,\n    textareaProps = props.textareaProps,\n    rest = _objectWithoutProperties(props, _excluded);\n  var id = useMemo(function () {\n    return anId !== null && anId !== void 0 ? anId : generateId();\n  }, [anId]);\n  var elementWrapperRef = useRef(null);\n  var nonEventChangeRef = useRef(true);\n  var currentValueRef = useRef(value);\n  currentValueRef.current = value;\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textRef = _useState4[0],\n    setTextRef = _useState4[1];\n  var _useHandleEditorInsta = useHandleEditorInstanceLifecycle({\n      options: options,\n      id: id,\n      currentValueRef: currentValueRef,\n      textRef: textRef\n    }),\n    editor = _useHandleEditorInsta.editor,\n    codemirror = _useHandleEditorInsta.codemirror;\n  useEffect(function () {\n    if (nonEventChangeRef.current) {\n      editor == null ? void 0 : editor.value(value !== null && value !== void 0 ? value : \"\");\n    }\n    nonEventChangeRef.current = true;\n  }, [editor, value]);\n  var onCodemirrorChangeHandler = useCallback(function (_, changeObject) {\n    if ((editor == null ? void 0 : editor.value()) !== currentValueRef.current) {\n      var _ref2;\n      nonEventChangeRef.current = false;\n      onChange == null ? void 0 : onChange((_ref2 = editor == null ? void 0 : editor.value()) !== null && _ref2 !== void 0 ? _ref2 : \"\", changeObject);\n    }\n  }, [editor, onChange]);\n  useEffect(function () {\n    if (options == null ? void 0 : options.autofocus) {\n      codemirror == null ? void 0 : codemirror.focus();\n      codemirror == null ? void 0 : codemirror.setCursor(codemirror == null ? void 0 : codemirror.lineCount(), 0);\n    }\n  }, [codemirror, options == null ? void 0 : options.autofocus]);\n  var getCursorCallback = useCallback(function () {\n    codemirror && (getLineAndCursor == null ? void 0 : getLineAndCursor(codemirror.getDoc().getCursor()));\n  }, [codemirror, getLineAndCursor]);\n  useEffect(function () {\n    getCursorCallback();\n  }, [getCursorCallback]);\n  useEffect(function () {\n    editor && (getMdeInstance == null ? void 0 : getMdeInstance(editor));\n  }, [editor, getMdeInstance]);\n  useEffect(function () {\n    codemirror && (getCodemirrorInstance == null ? void 0 : getCodemirrorInstance(codemirror));\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n  useEffect(function () {\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\"extraKeys\", Object.assign({}, codemirror.getOption(\"extraKeys\"), extraKeys));\n    }\n  }, [codemirror, extraKeys]);\n  useEffect(function () {\n    var _a;\n    var toolbarNode = (_a = elementWrapperRef.current) == null ? void 0 : _a.getElementsByClassName(\"editor-toolbarNode\")[0];\n    var handler = codemirror && onCodemirrorChangeHandler;\n    if (handler) {\n      toolbarNode == null ? void 0 : toolbarNode.addEventListener(\"click\", handler);\n      return function () {\n        toolbarNode == null ? void 0 : toolbarNode.removeEventListener(\"click\", handler);\n      };\n    }\n    return function () {};\n  }, [codemirror, onCodemirrorChangeHandler]);\n  useEffect(function () {\n    codemirror == null ? void 0 : codemirror.on(\"change\", onCodemirrorChangeHandler);\n    codemirror == null ? void 0 : codemirror.on(\"cursorActivity\", getCursorCallback);\n    return function () {\n      codemirror == null ? void 0 : codemirror.off(\"change\", onCodemirrorChangeHandler);\n      codemirror == null ? void 0 : codemirror.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n  var prevEvents = useRef(events);\n  useEffect(function () {\n    var isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun && prevEvents.current && Object.entries(prevEvents.current).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        event = _ref4[0],\n        handler = _ref4[1];\n      handler && (codemirror == null ? void 0 : codemirror.off(event, handler));\n    });\n    events && Object.entries(events).forEach(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        event = _ref6[0],\n        handler = _ref6[1];\n      handler && (codemirror == null ? void 0 : codemirror.on(event, handler));\n    });\n    prevEvents.current = events;\n    return function () {\n      events && Object.entries(events).forEach(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n          event = _ref8[0],\n          handler = _ref8[1];\n        handler && (codemirror == null ? void 0 : codemirror.off(event, handler));\n      });\n    };\n  }, [codemirror, events]);\n  return /* @__PURE__ */React.createElement(\"div\", _objectSpread(_objectSpread({\n    id: \"\".concat(id, \"-wrapper\")\n  }, rest), {}, {\n    ref: function ref(aRef) {\n      if (typeof _ref9 === \"function\") {\n        _ref9(aRef);\n      } else if (_ref9) {\n        _ref9.current = aRef;\n      }\n      elementWrapperRef.current = aRef;\n    }\n  }), /* @__PURE__ */React.createElement(\"textarea\", _objectSpread(_objectSpread({}, textareaProps), {}, {\n    id: id,\n    placeholder: placeholder,\n    ref: setTextRef,\n    style: {\n      display: \"none\"\n    }\n  })));\n});\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\nvar SimpleMdeReact_default = SimpleMdeReact;\nexport { SimpleMdeReact, SimpleMdeReact_default as default };","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","SimpleMDE","_id","generateId","concat","useHandleEditorInstanceLifecycle","_ref","options","id","currentValueRef","textRef","_useState","_useState2","_slicedToArray","editor","setEditor","imageUploadCallback","file","onSuccess","onError","imageUpload","imageUploadFunction","_onSuccess","url","editorRef","current","editor2","initialOptions","element","initialValue","Object","assign","toTextArea","cleanup","codemirror","SimpleMdeReact","forwardRef","props","ref","events","value","children","extraKeys","getLineAndCursor","getMdeInstance","getCodemirrorInstance","onChange","anId","placeholder","textareaProps","rest","_objectWithoutProperties","_excluded","elementWrapperRef","nonEventChangeRef","_useState3","_useState4","setTextRef","_useHandleEditorInsta","onCodemirrorChangeHandler","_","changeObject","_ref2","autofocus","focus","setCursor","lineCount","getCursorCallback","getDoc","getCursor","setOption","getOption","_a","toolbarNode","getElementsByClassName","handler","addEventListener","removeEventListener","on","off","prevEvents","isNotFirstEffectRun","entries","forEach","_ref3","_ref4","event","_ref5","_ref6","_ref7","_ref8","createElement","_objectSpread","aRef","style","display","displayName","SimpleMdeReact_default"],"sources":["D:\\GottaBeReplaced\\Diploma\\DiabetesCare\\server\\src\\node_modules\\react-simplemde-editor\\src\\SimpleMdeReact.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport SimpleMDE, { Options } from \"easymde\";\n\nimport type { Editor, EditorEventMap, KeyMap, Position } from \"codemirror\";\nimport { EditorChange } from \"codemirror\";\n\nlet _id = 0;\n\nconst generateId = () => `simplemde-editor-${++_id}`;\n\nexport type DOMEvent =\n  | \"mousedown\"\n  | \"dblclick\"\n  | \"touchstart\"\n  | \"contextmenu\"\n  | \"keydown\"\n  | \"keypress\"\n  | \"keyup\"\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"dragstart\"\n  | \"dragenter\"\n  | \"dragover\"\n  | \"dragleave\"\n  | \"drop\";\n\nexport type CopyEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof DocumentAndElementEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: DocumentAndElementEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type GlobalEvents = {\n  [TKey in string &\n    DOMEvent &\n    keyof GlobalEventHandlersEventMap as `${TKey}`]?: (\n    instance: Editor,\n    event: GlobalEventHandlersEventMap[TKey]\n  ) => void;\n};\n\nexport type DefaultEvent = (instance: Editor, ...args: any[]) => void;\n\nexport type IndexEventsSignature = {\n  [key: string]: DefaultEvent | undefined;\n};\n\nexport interface SimpleMdeToCodemirrorEvents\n  extends CopyEvents,\n    GlobalEvents,\n    IndexEventsSignature,\n    Partial<EditorEventMap> {}\n\nexport type GetMdeInstance = (instance: SimpleMDE) => void;\nexport type GetCodemirrorInstance = (instance: Editor) => void;\nexport type GetLineAndCursor = (instance: Position) => void;\n\nexport interface SimpleMDEReactProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  id?: string;\n  onChange?: (value: string, changeObject?: EditorChange) => void;\n  value?: string;\n  extraKeys?: KeyMap;\n  options?: SimpleMDE.Options;\n  events?: SimpleMdeToCodemirrorEvents;\n  getMdeInstance?: GetMdeInstance;\n  getCodemirrorInstance?: GetCodemirrorInstance;\n  getLineAndCursor?: GetLineAndCursor;\n  placeholder?: string;\n  textareaProps?: Omit<\n    React.HTMLAttributes<HTMLTextAreaElement>,\n    \"id\" | \"style\" | \"placeholder\"\n  >;\n}\n\nconst useHandleEditorInstanceLifecycle = ({\n  options,\n  id,\n  currentValueRef,\n  textRef,\n}: {\n  options?: Options;\n  id: string;\n  currentValueRef: React.MutableRefObject<string | undefined>;\n  textRef: HTMLTextAreaElement | null;\n}) => {\n  const [editor, setEditor] = useState<SimpleMDE | null>(null);\n\n  const imageUploadCallback = useCallback(\n    (\n      file: File,\n      onSuccess: (url: string) => void,\n      onError: (error: string) => void\n    ) => {\n      const imageUpload = options?.imageUploadFunction;\n      if (imageUpload) {\n        const _onSuccess = (url: string) => {\n          onSuccess(url);\n        };\n        imageUpload(file, _onSuccess, onError);\n      }\n    },\n    [options?.imageUploadFunction]\n  );\n\n  const editorRef = useRef(editor);\n  editorRef.current = editor;\n\n  useEffect(() => {\n    let editor: SimpleMDE;\n    if (textRef) {\n      const initialOptions = {\n        element: textRef,\n        initialValue: currentValueRef.current,\n      };\n      const imageUploadFunction = options?.imageUploadFunction\n        ? imageUploadCallback\n        : undefined;\n      editor = new SimpleMDE(\n        Object.assign({}, initialOptions, options, {\n          imageUploadFunction,\n        })\n      );\n      setEditor(editor);\n    }\n    return () => {\n      editor?.toTextArea();\n      editor?.cleanup();\n    };\n  }, [textRef, currentValueRef, id, imageUploadCallback, options]);\n\n  const codemirror = useMemo(() => {\n    return editor?.codemirror;\n  }, [editor?.codemirror]) as Editor | undefined;\n  return { editor, codemirror };\n};\n\nexport const SimpleMdeReact = React.forwardRef<\n  HTMLDivElement,\n  SimpleMDEReactProps\n>((props, ref) => {\n  const {\n    events,\n    value,\n    options,\n    children,\n    extraKeys,\n    getLineAndCursor,\n    getMdeInstance,\n    getCodemirrorInstance,\n    onChange,\n    id: anId,\n    placeholder,\n    textareaProps,\n    ...rest\n  } = props;\n\n  const id = useMemo(() => anId ?? generateId(), [anId]);\n\n  const elementWrapperRef = useRef<HTMLDivElement | null>(null);\n  const nonEventChangeRef = useRef<boolean>(true);\n\n  // This is to not pass value as a dependency e.g. to keep event handlers referentially\n  // stable and do not `off` and `on` on each value change\n  // plus to avoid unnecessary EasyEde editor recreation on each value change while still, if it has to be remounted\n  // due to options and other deps change, to preserve that last value and not the default one from the first render.\n  const currentValueRef = useRef(value);\n  currentValueRef.current = value;\n\n  const [textRef, setTextRef] = useState<HTMLTextAreaElement | null>(null);\n  const { editor, codemirror } = useHandleEditorInstanceLifecycle({\n    options,\n    id,\n    currentValueRef,\n    textRef,\n  });\n\n  useEffect(() => {\n    // If change comes from the event we don't need to update `SimpleMDE` value as it already has it\n    // Otherwise we shall set it as it comes from `props` set from the outside. E.g. by some reset button and whatnot\n    if (nonEventChangeRef.current) {\n      editor?.value(value ?? \"\");\n    }\n    nonEventChangeRef.current = true;\n  }, [editor, value]); //  _: Editor | Event <===== is to please TS :)\n  const onCodemirrorChangeHandler = useCallback(\n    (_: Editor | Event, changeObject?: EditorChange) => {\n      if (editor?.value() !== currentValueRef.current) {\n        nonEventChangeRef.current = false;\n        onChange?.(editor?.value() ?? \"\", changeObject);\n      }\n    },\n    [editor, onChange]\n  );\n\n  useEffect(() => {\n    // For some reason it doesn't work out of the box, this makes sure it's working correctly\n    if (options?.autofocus) {\n      codemirror?.focus();\n      codemirror?.setCursor(codemirror?.lineCount(), 0);\n    }\n  }, [codemirror, options?.autofocus]);\n\n  const getCursorCallback = useCallback(() => {\n    // https://codemirror.net/doc/manual.html#api_selection\n    codemirror && getLineAndCursor?.(codemirror.getDoc().getCursor());\n  }, [codemirror, getLineAndCursor]);\n\n  useEffect(() => {\n    getCursorCallback();\n  }, [getCursorCallback]);\n\n  useEffect(() => {\n    editor && getMdeInstance?.(editor);\n  }, [editor, getMdeInstance]);\n\n  useEffect(() => {\n    codemirror && getCodemirrorInstance?.(codemirror);\n  }, [codemirror, getCodemirrorInstance, getMdeInstance]);\n\n  useEffect(() => {\n    // https://codemirror.net/doc/manual.html#option_extraKeys\n    if (extraKeys && codemirror) {\n      codemirror.setOption(\n        \"extraKeys\",\n        Object.assign({}, codemirror.getOption(\"extraKeys\"), extraKeys)\n      );\n    }\n  }, [codemirror, extraKeys]);\n\n  useEffect(() => {\n    const toolbarNode =\n      elementWrapperRef.current?.getElementsByClassName(\n        \"editor-toolbarNode\"\n      )[0];\n    const handler = codemirror && onCodemirrorChangeHandler;\n    if (handler) {\n      toolbarNode?.addEventListener(\"click\", handler);\n      return () => {\n        toolbarNode?.removeEventListener(\"click\", handler);\n      };\n    }\n    return () => {};\n  }, [codemirror, onCodemirrorChangeHandler]);\n\n  useEffect(() => {\n    codemirror?.on(\"change\", onCodemirrorChangeHandler);\n    codemirror?.on(\"cursorActivity\", getCursorCallback);\n    return () => {\n      codemirror?.off(\"change\", onCodemirrorChangeHandler);\n      codemirror?.off(\"cursorActivity\", getCursorCallback);\n    };\n  }, [codemirror, getCursorCallback, onCodemirrorChangeHandler]);\n\n  const prevEvents = useRef(events);\n\n  useEffect(() => {\n    const isNotFirstEffectRun = events !== prevEvents.current;\n    isNotFirstEffectRun &&\n      prevEvents.current &&\n      Object.entries(prevEvents.current).forEach(([event, handler]) => {\n        handler && codemirror?.off(event as keyof EditorEventMap, handler);\n      });\n\n    events &&\n      Object.entries(events).forEach(([event, handler]) => {\n        handler && codemirror?.on(event as keyof EditorEventMap, handler);\n      });\n    prevEvents.current = events;\n    return () => {\n      events &&\n        Object.entries(events).forEach(([event, handler]) => {\n          handler && codemirror?.off(event as keyof EditorEventMap, handler);\n        });\n    };\n  }, [codemirror, events]);\n\n  return (\n    <div\n      id={`${id}-wrapper`}\n      {...rest}\n      ref={(aRef) => {\n        if (typeof ref === \"function\") {\n          ref(aRef);\n        } else if (ref) {\n          ref.current = aRef;\n        }\n        elementWrapperRef.current = aRef;\n      }}\n    >\n      <textarea\n        {...textareaProps}\n        id={id}\n        placeholder={placeholder}\n        ref={setTextRef}\n        style={{ display: \"none\" }}\n      />\n    </div>\n  );\n});\n\nSimpleMdeReact.displayName = \"SimpleMdeReact\";\n\nexport default SimpleMdeReact;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}